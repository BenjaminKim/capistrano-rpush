{
  "name": "Capistrano-rpush",
  "tagline": "Capistrano3 plugin to control RPush installations",
  "body": "[![Gem Version](https://badge.fury.io/rb/capistrano-rpush.svg)](https://badge.fury.io/rb/capistrano-rpush)\r\n\r\n# Capistrano::Rpush\r\n\r\n[Capistrano::Rpush](https://github.com/juicyparts/capistrano-rpush) adds [Rpush](https://rubygems.org/gems/rpush) tasks to your Capistrano deployment.\r\n\r\n## Rpush\r\n\r\nThis gem was developed against version 2.7.0. Additionally it only provides tasks over a subset of available commands:\r\n\r\n    $ rpush --help\r\n```\r\nCommands:\r\n  rpush help [COMMAND]  # Describe available commands or one specific command\r\n  rpush init            # Initialize Rpush into the current directory\r\n  rpush push            # Deliver all pending notifications and then exit\r\n  rpush start           # Start Rpush\r\n  rpush status          # Show the internal status of the running Rpush instance.\r\n  rpush stop            # Stop Rpush\r\n  rpush version         # Print Rpush version\r\n\r\nOptions:\r\n  -c, [--config=CONFIG]\r\n                               # Default: config/initializers/rpush.rb\r\n  -e, [--rails-env=RAILS-ENV]\r\n                               # Default: development\r\n```\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'capistrano-rpush'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install capistrano-rpush\r\n\r\n## Usage\r\n\r\n```ruby\r\n  # In Rails.root/Capfile\r\n\r\n\r\n  require 'capistrano/rpush'\r\n```\r\n\r\nNow you can use cap -T to list tasks:\r\n\r\n```\r\ncap rpush:restart  # Restart rpush\r\ncap rpush:start    # Start rpush\r\ncap rpush:status   # Status rpush\r\ncap rpush:stop     # Stop rpush\r\n```\r\n\r\n### Configuration\r\n\r\nThe following configurable options are available, and listed with their defaults. Override them to suit your project's needs:\r\n\r\n```ruby\r\n  set :rpush_role, :app\r\n  set :rpush_env,  -> { fetch(:rack_env, fetch(:rails_env, fetch(:stage))) }\r\n  set :rpush_conf, -> { File.join(shared_path, 'config', 'rpush.rb') }\r\n  set :rpush_log,  -> { File.join(shared_path, 'log', 'rpush.log') }\r\n  set :rpush_pid,  -> { File.join(shared_path, 'tmp', 'pids', 'rpush.pid') }\r\n```\r\n\r\nThe options assume ```rpush.rb``` is defined in ```linked_files```. They also assume the following directories are listed in ```linked_dirs```:\r\n\r\n    tmp/pids log\r\n\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/juicyparts/capistrano-rpush. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\r\n\r\n\r\n## License\r\n\r\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}